{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace CreateIncident",
    "description": "This service is located at [/create-incident/](/create-incident/)",
    "version": ""
  },
  "servers": [
    {
      "url": "/create-incident"
    }
  ],
  "tags": [
    {
      "name": "Responsible"
    },
    {
      "name": "Topic"
    },
    {
      "name": "Incident"
    }
  ],
  "paths": {
    "/Responsible": {
      "get": {
        "summary": "Retrieve a list of responsible.",
        "tags": [
          "Responsible"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "name",
                  "name desc",
                  "topic_ID",
                  "topic_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "name",
                  "topic_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "topic"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved responsible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Responsible",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CreateIncident.Responsible"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single responsible.",
        "tags": [
          "Responsible"
        ],
        "requestBody": {
          "description": "New responsible",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncident.Responsible-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created responsible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Responsible"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Responsible({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single responsible.",
        "tags": [
          "Responsible"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "name",
                  "topic_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "topic"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved responsible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Responsible"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single responsible.",
        "tags": [
          "Responsible"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncident.Responsible-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single responsible.",
        "tags": [
          "Responsible"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Responsible({ID})/topic": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve topic of a responsible.",
        "tags": [
          "Responsible",
          "Topic"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "topicName",
                  "responsible_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "responsible"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Topic"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Topic": {
      "get": {
        "summary": "Retrieve a list of topic.",
        "tags": [
          "Topic"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "topicName",
                  "topicName desc",
                  "responsible_ID",
                  "responsible_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "topicName",
                  "responsible_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "responsible"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved topic",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Topic",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CreateIncident.Topic"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single topic.",
        "tags": [
          "Topic"
        ],
        "requestBody": {
          "description": "New topic",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncident.Topic-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Topic"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Topic({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single topic.",
        "tags": [
          "Topic"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "topicName",
                  "responsible_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "responsible"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Topic"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single topic.",
        "tags": [
          "Topic"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncident.Topic-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single topic.",
        "tags": [
          "Topic"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Topic({ID})/responsible": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieve responsible of a topic.",
        "tags": [
          "Topic",
          "Responsible"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "name",
                  "topic_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "topic"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved responsible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Responsible"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Incident": {
      "get": {
        "summary": "Retrieve a list of incident.",
        "tags": [
          "Incident"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "creator",
                  "creator desc",
                  "topic_ID",
                  "topic_ID desc",
                  "responsible_ID",
                  "responsible_ID desc",
                  "status",
                  "status desc",
                  "priority",
                  "priority desc",
                  "title",
                  "title desc",
                  "message",
                  "message desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "creator",
                  "topic_ID",
                  "responsible_ID",
                  "status",
                  "priority",
                  "title",
                  "message"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "topic",
                  "responsible"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved incident",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Incident",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CreateIncident.Incident"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single incident.",
        "tags": [
          "Incident"
        ],
        "requestBody": {
          "description": "New incident",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncident.Incident-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created incident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Incident"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Incident({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single incident.",
        "tags": [
          "Incident"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "creator",
                  "topic_ID",
                  "responsible_ID",
                  "status",
                  "priority",
                  "title",
                  "message"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "topic",
                  "responsible"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved incident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Incident"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single incident.",
        "tags": [
          "Incident"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncident.Incident-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single incident.",
        "tags": [
          "Incident"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Incident({ID})/topic": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve topic of a incident.",
        "tags": [
          "Incident",
          "Topic"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "topicName",
                  "responsible_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "responsible"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Topic"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Incident({ID})/responsible": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve responsible of a incident.",
        "tags": [
          "Incident",
          "Responsible"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "name",
                  "topic_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "topic"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved responsible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIncident.Responsible"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Responsible HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateIncident.Responsible": {
        "title": "Responsible",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "topic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Topic"
              }
            ],
            "nullable": true
          },
          "topic_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateIncident.Responsible-create": {
        "title": "Responsible (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "topic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Topic-create"
              }
            ],
            "nullable": true
          },
          "topic_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "CreateIncident.Responsible-update": {
        "title": "Responsible (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "topic_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateIncident.Topic": {
        "title": "Topic",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "topicName": {
            "type": "string",
            "nullable": true
          },
          "responsible": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Responsible"
              }
            ],
            "nullable": true
          },
          "responsible_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateIncident.Topic-create": {
        "title": "Topic (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "topicName": {
            "type": "string",
            "nullable": true
          },
          "responsible": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Responsible-create"
              }
            ],
            "nullable": true
          },
          "responsible_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "CreateIncident.Topic-update": {
        "title": "Topic (for update)",
        "type": "object",
        "properties": {
          "topicName": {
            "type": "string",
            "nullable": true
          },
          "responsible_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateIncident.Incident": {
        "title": "Incident",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "topic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Topic"
              }
            ],
            "nullable": true
          },
          "topic_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "responsible": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Responsible"
              }
            ],
            "nullable": true
          },
          "responsible_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateIncident.Incident-create": {
        "title": "Incident (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "topic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Topic-create"
              }
            ],
            "nullable": true
          },
          "topic_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "responsible": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateIncident.Responsible-create"
              }
            ],
            "nullable": true
          },
          "responsible_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "CreateIncident.Incident-update": {
        "title": "Incident (for update)",
        "type": "object",
        "properties": {
          "creator": {
            "type": "string",
            "nullable": true
          },
          "topic_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "responsible_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}